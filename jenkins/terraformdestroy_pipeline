pipeline {
    agent { label 'master' }
    tools {
  terraform 'terraform2'
}
stages {
     stage('clone repo'){
        steps{
             git 'https://github.com/ezzatabonazel/terraform.git'
            }
        }
        stage('terraform format check') {
            steps{
               sh 'terraform fmt'
            }
        }
        stage('terrafrom init'){
            steps{
                withAWS(credentials: 'myaccess') {
                    sh 'terraform init'
                }
            }
        }
            stage('terrafrom apply'){
                steps{
                    withAWS(credentials: 'myaccess') {
                         sh 'terraform apply --var-file=dev.tfvars --auto-approve'
                    }
                }
            }
    }
}pipeline {
    agent { label 'master' }
    tools {
  terraform 'terraform2'
}
stages {
     stage('clone repo'){
        steps{
             git 'https://github.com/ezzatabonazel/terraform.git'
            }
        }
        stage('terraform format check') {
            steps{
               sh 'terraform fmt'
            }
        }
        stage('terrafrom init'){
            steps{
                withAWS(credentials: 'myaccess') {
                    sh 'terraform init'
                }
            }
        }
            stage('terrafrom apply'){
                steps{
                    withAWS(credentials: 'myaccess') {
                         sh 'terraform destroy --var-file=dev.tfvars --auto-approve'
                    }
                }
            }
    }
}